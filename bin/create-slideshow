#!/usr/bin/env ruby
# -*- mode: RUBY -*-

require 'gnome-wallpaper-slideshow'
require 'gnome-wallpaper-slideshow/wallpaper'
require 'optparse'

DEFAULT_EXTENSIONS = "jpg,png,jpeg"

# Gets the absolute path to a file
# @param [String] file The file for which to construct the absolute path
# @return [String] The absolute path of the given file
def get_absolute_path(file)
  File.expand_path file
end

# Parse command-line options
options = {}

optparse = OptionParser.new do |opts|
  opts.on('-d', '--dir DIRECTORY', 'directory containing image files') do |sender|
    options[:dir] = sender
  end

  opts.on('-t', '--time DURATION', 'amount of time to display each wallpaper in seconds') do |sender|
    options[:duration] = sender
  end

  opts.on('-r', '--transition DURATION', 'transition time between wallpapers in seconds') do |sender|
    options[:transition] = sender
  end

  opts.on('-f', '--filename FILENAME', 'output filename') do |sender|
    options[:file] = sender
  end

  opts.on('-e', '--extensions EXTENSIONS', "comma-separated list of file extensions, defaults to #{DEFAULT_EXTENSIONS}") do |sender|
    options[:ext] = sender
  end

  opts.on('-s', '--shuffle', 'Randomly shuffle the order of the wallpapers') do |sender|
    options[:shuffle] = sender
  end

  opts.on_tail('-h', '--help', 'Show this message') do
    puts opts
    exit
  end
end

# Ensure mandatory arguments are present
begin
  optparse.parse!
  mandatory = [:dir, :duration, :transition, :file]

  missing = mandatory.select do |param|
    options[param].nil?
  end

  if not missing.empty?
    puts "Missing options: #{missing.join(', ')}"
    puts optparse
    exit
  end
rescue OptionParser::InvalidOption, OptionParser::MissingArgument
  puts $!.to_s
  puts optparse
  exit
end

image_directory = options[:dir]
time = options[:duration]
transition_time = options[:transition]
output_filename = options[:file]
extensions = options[:ext] || DEFAULT_EXTENSIONS

wallpapers = Dir.glob("#{image_directory}/*.{#{extensions}}").map do |file|
  GnomeWallpaperSlideshow::Wallpaper.new get_absolute_path(file), time, transition_time
end

# Randomly shuffle the wallpapers if requested
if options[:shuffle]
  wallpapers.shuffle!
end

slideshow = GnomeWallpaperSlideshow.new do
  create_new_slideshow output_filename
  start_time Time.now
  wallpapers.each do |wallpaper|
    add_wallpaper wallpaper
  end
end

slideshow.save_xml
